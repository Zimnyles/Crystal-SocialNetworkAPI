package views

import "zimniyles/fibergo/internal/models"
import "zimniyles/fibergo/views/widgets"
import "zimniyles/fibergo/views/layout"


templ ProfilePage(userData models.ProfileCredentials) {
    @layout.Layout(layout.LayoutProps{
        Title: "Котики.ру",
        MetaDescriptiom: "Статьи про котиков",
    }){
        <main>
            @ProfilePageStyle()
            @layout.HeaderSmall()
            {{ login := ctx.Value("login").(string) }}
            <div class="leftmenu-and-content-wrappper">
                <div class="left-menu">
                    @widgets.LeftMenu()
                </div>
                <div class="profile-container">
                    <div class="profile-header">
                        
                        <form id="avatarForm"
                              action="/api/upload-avatar"
                              method="POST"
                              enctype="multipart/form-data"
                              >
                            <input id="avatarInput" type="file" name="avatar" accept="image/*" style="display: none;">
                        </form>
                        <img id="avatarImage" class="profile-avatar"  crossorigin="anonymous" src={ userData.AvatarPath } alt="Изображение профиля">
                    
                        <div class="profile-username">{ userData.Login }</div>
                        if login == userData.Login {
                            <p id="avatarPreview">Сменить аватар</p>
                            
                            
                            <script>
                                const preview = document.getElementById("avatarPreview");
                                const input = document.getElementById("avatarInput");
                                const form = document.getElementById("avatarForm");

                                preview.addEventListener("click", function () {
                                    input.click();
                                });

                                
                                input.addEventListener("change", function () {
                                    if (input.files.length > 0) {
                                        form.submit(); 
                                    }
                                });
                            </script>
                        }
                        

                    </div>

                    {{ 
                        var role string
                        if userData.Role == "0" {
                            role = "Пользователь"} else{
                                role = "Администратор"
                            }
                    }}

                    <div class="profile-details">
                        <div class="detail-item">
                            <span class="detail-label">Логин:</span>
                            <span class="detail-value">{ userData.Login }</span>
                        </div>

                        <div class="detail-item">
                            <span class="detail-label">Роль:</span>
                            <span class="detail-value">{ role }</span>
                        </div>
                
                        <div class="detail-item">
                            <span class="detail-label">Дата регистрации:</span>
                            <span class="detail-value join-date">
                                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                        d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
                                </svg>
                            {{ time := userData.Createdat.Format("2006-01-02")}}
                            <span>  { time } </span>
                            </span>
                        </div>
                    </div>
                </div>
            </div>
            
            <script>
                window.addEventListener('DOMContentLoaded', function () {
                    const img = document.getElementById('avatarImage');

                    if (!img) {
                        console.error('Изображение не найдено!');
                        return;
                    }

                    const colorThief = new ColorThief();

                    function applyColor() {
                        try {
                            const color = colorThief.getColor(img);
                            const rgbColor = `rgb(${color[0]}, ${color[1]}, ${color[2]})`;

                            const header = document.querySelector('.profile-header');
                            if (header) {
                                header.style.background = rgbColor;
                                console.log('Цвет применён:', rgbColor);
                            } else {
                                console.error('Элемент .profile-header не найден');
                            }
                        } catch (error) {
                            console.error('Ошибка при получении цвета:', error);
                        }
                    }

                    if (img.complete && img.naturalWidth !== 0) {
                        applyColor();
                    } else {
                        img.addEventListener('load', applyColor);
                        img.addEventListener('error', function () {
                            console.error('Ошибка загрузки изображения');
                        });
                    }
                });
            </script>
        </main>
    }
}



templ ProfilePageStyle() {
    <style>
        .left-menu{
           min-width: 220px;
           max-width: 220px;
        }

        .leftmenu-and-content-wrappper{
        margin: 0;
        padding: 0;
        display: flex;
        flex-direction: row;
        justify-content: center;
        margin-left: 300px;
        margin-right: 300px;
        max-width: 1320px;
        }
        
    
        .profile-container {
            color: var(--color-white);
            margin-top: 15px;
            border-radius: 20px;
            width: 100%;
            background: #222222;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            overflow: hidden;
        }
    
        .profile-header {
            background: #8c7ce8;
            padding: 30px 20px; 
            text-align: center;
            color: white;
        }
    
        .profile-avatar {
            width: 120px;
            height: 120px;
            border-radius: 50%;
            object-fit: cover;
            border: 4px solid white;
            margin-bottom: 15px;
        }
    
        .profile-username {
            font-size: 24px;
            font-weight: bold;
            margin: 10px 0 5px;
        }
    
        .profile-details {
            padding: 20px;
        }
    
        .detail-item {
            display: flex;
            justify-content: space-between;
            padding: 12px 0;
            border-bottom: 1px solid #eee;
        }
    
        .detail-label {
            font-weight: bold;
            
        }
    
        .detail-value {
            
        }
    
        .join-date {
            display: flex;
            align-items: center;
            gap: 8px;
        }
    
        .join-date svg {
            width: 16px;
            height: 16px;
        }
    </style>
}