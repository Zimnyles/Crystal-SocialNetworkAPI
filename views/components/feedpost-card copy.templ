package components

import "time"
import "github.com/rvflash/elapsed"


type FeedPostCardProps struct{
    CreatorLogin string 
    Content string 
    ImagePath string 
    CreatedAt time.Time
    CreatorAvatarPath string
}


templ FeedPostCard(props FeedPostCardProps ) {
    {{ date:= elapsed.LocalTime(props.CreatedAt, "ru") }}
    @FeedPostCardStyle()
    <div class="post-card">
        <div class="post-card__footer">
            <div class="post-card__footer--creator">
                <img  class="profile-avatar" crossorigin="anonymous" src={ props.CreatorAvatarPath } alt="Изображение профиля">
                <span class="post-card__creatorlogin">   { props.CreatorLogin }  </span>
            </div>
            <span class="post-card__createdat"   >   { date }                </span>
            
        </div>
        <div class="post-card__content__text">
            <span class="post-card__text"> { props.Content } </span>
        </div>
        <div class="post-card__content">
            <div class="post-card__content__image">
                <img class="post-image" crossorigin="anonymous"  src={ props.ImagePath }
                    alt="Изображение поста">
            </div>
        
        </div>
        
    </div>
}


templ FeedPostCardStyle() {
    <style>

        .post-card__text{
            white-space: pre-wrap; /* Сохраняет переносы строк из текста */
            word-wrap: break-word; /* Переносит длинные слова */
            overflow-wrap: break-word; /* Альтернатива для word-wrap */
            word-break: break-word; /* Оптимальный перенос слов */
            display: block; /* Если нужно чтобы span вел себя как блок */
            width: 100%; /* Занимает всю доступную ширину */
        }

        .post-card__content__text{
            margin-left: 15px;
            margin-right: 15px;
        }

        .post-image{
            border-radius: 20px;
            object-fit: scale-down;
            max-width: 100%;
            max-height: 100%;
            width: auto;
            height: auto;
        }

        .post-card__content{
           display: flex;
           flex-grow: 1;
           justify-content: center;
        }

        .post-card__creatorlogin{
            margin-left: 10px;
        }

        .post-card__footer--creator{
            display: flex;
            flex-direction: row;
            align-items: center;
            justify-content: center;
        }

        .post-card__content__image{
            object-fit: cover;
            border-radius: 20px;
            max-width: 800px;
            max-height: 450px;
            width: auto;
            height: auto;
            overflow: hidden;
            display: flex;
            justify-content: center;
            align-items: center;
            margin-bottom: 15px;
        }

        .profile-avatar {

            width: 30px;
            height: 30px;
            border-radius: 50%;
            object-fit: cover;
            
        }
        .post-card__footer{
            display: flex;
            justify-content: space-between; /* Равномерное распределение */
            padding-right: 15px;
            padding-left: 15px;
            margin: 0 auto; /* Центрирование */
            align-items: center;
            box-sizing: border-box; /* Чтобы padding не увеличивал ширину */
        
            background: #303030;
            max-width: 1100px;
            width: 100%;
            height: 40px;
            border-radius: 20px 20px 0 0
        }

        .post-card {
            overflow: hidden;
            color: var(--color-white);
            display: flex;
            max-width: 1100px;
            width: 100%;
            min-height: 400px;
            height: 100%;
            flex-direction: column;
            background: #222222;
            border-radius: 20px;
            gap: 15px ;
            width: 100%;

        
    </style>
}