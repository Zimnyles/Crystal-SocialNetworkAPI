package components

type RequestCredentials struct{
    Login string 
    AvatarPath string 
    FriendshipStatus string 
}

templ FriendRequest(credentials RequestCredentials) {
    @FriendRequestStyle()
    @FriendRequestScript()
        {{ status := credentials.FriendshipStatus }}
        <div class="request-wrapper" id={"friend-request-" + credentials.Login}>
            if status == "pendingIncoming" {
                <div class="user-info-wrapper-many">
                    <div class="request-avatar-wrapper"><img class="request-avatar" src={ credentials.AvatarPath }></div>
                    <div class="login-and-status-wrapper">
                        { truncateString(credentials.Login, 9) }
                        if status == "pendingIncoming" {
                        <div>Входящая завяка</div>
                        } else {
                        <div>Исходящая завяка</div>
                        }
                    </div>
                </div>

                {{ acceptFriendship := "api/acceptfriendship/" + credentials.Login }}
                {{ declineFriendship := "api/declinefriendship/" + credentials.Login }}

                    <div class="accept-button" hx-post={ acceptFriendship } hx-target=".page-firendslist" hx-swap="innerHTML"
                        hx-trigger="click" _="on htmx:afterRequest
                               add .fade-out to closest .request-wrapper
                               then wait 300ms
                               then remove closest .request-wrapper">
                        <img width="50px" height="50px" src="/public/icons/addfriend.svg">
                    </div>

                    <div class="reject-button" hx-post={ declineFriendship } hx-trigger="click" hx-swap="none" _="on click
                            add .fade-out to closest .request-wrapper
                            then wait 300ms
                            then remove closest .request-wrapper">
                        <img width="50px" height="50px" src="/public/icons/deny.svg" class="reject-icon">
                    </div>
            } else {
                <div class="user-info-wrapper-solo">
                    <div class="request-avatar-wrapper"><img class="request-avatar" src={ credentials.AvatarPath }></div>
                    <div class="login-and-status-wrapper">
                        { credentials.Login }
                        if status == "pendingIncoming" {
                        <div>Входящая завяка</div>
                        } else {
                        <div>Исходящая завяка</div>
                        }
                    </div>
                </div>

                {{ declineFriendship := "api/declinefriendship/" + credentials.Login }}

                <div class="reject-button-solo" hx-post={ declineFriendship } hx-trigger="click" _="on click
                                    add .fade-out to closest .request-wrapper
                                    then wait 300ms
                                    then remove closest .request-wrapper" hx-swap="none">
                    <img width="50px" height="50px" src="/public/icons/deny.svg" class="reject">
                </div>
            }

            
        </div>
        
}

func truncateString(str string, num int) string {
    if len(str) <= num {
        return str
    }
    return str[:num] + "..."
}

templ FriendRequestScript() {
<script src="https://unpkg.com/hyperscript.org@0.9.7"></script>
}

templ FriendRequestStyle() {
    <style>
    .accept-button{
        display: flex;
        align-items: center;
        justify-content: center;
        min-width: 68px;
        max-width: 68px;
        width: 100%;
        min-height: 90px;
        height: 100%;
        background: #222222;
        border-radius: 20px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        margin-left: 15px;
    }

    .accept-button:hover{
        background-color: #303030;
    }

    .reject-button{
        display: flex;
        align-items: center;
        justify-content: center;
        max-width: 68px;
        min-width: 68px;
        width: 100%;
        min-height: 90px;
        height: 100%;
        background: #222222;
        border-radius: 20px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        margin-left: 15px;
    }

    .reject-button:hover{
        background-color: #303030;
    }

    .reject-button-solo{
        display: flex;
        align-items: center;
        justify-content: center;
        margin-left: 15px;
        max-width: 68px;
        width: 100%;
        min-height: 90px;
        height: 100%;
        background: #222222;
        border-radius: 20px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }
    .login-and-status-wrapper{
        display: flex;
        flex-direction: column;
        margin-left: 15px;
    }
    .user-info-wrapper-many{
        display: flex;
        flex-direction: row;
        color: white;
        align-items: center;
        justify-content: left;
        background: #222222;
        border-radius: 20px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        min-height: 90px;
        height: 100%;
        padding-left: 15px;
        max-width: 191px;
        width: 100%;
    }
    .user-info-wrapper-solo{
        display: flex;
        flex-direction: row;
        color: white;
        align-items: center;
        justify-content: left;
        background: #222222;
        border-radius: 20px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        min-height: 90px;
        height: 100%;
        padding-left: 15px;
        max-width: 284px;
        width: 100%;
    }
    .request-avatar-wrapper{
        max-width: 60px;
        max-height: 60px;
    }
    .request-avatar{
        width: 60px;
        height: 60px;
        border-radius: 50%;
        object-fit: cover;
    }
    .request-wrapper {
        display: flex;
        flex-direction: row;
        align-items: center;
        justify-content: left;
        min-width: 354px;
        width: 100%;
        margin-bottom: 15px;
        opacity: 1;
        height: auto;
        transform: scale(1);
        transition: 
            opacity 0.3s ease-out,
            height 0.3s ease-out 0.1s, 
            margin 0.3s ease-out,
            padding 0.3s ease-out,
            transform 0.3s ease-out;
        overflow: hidden;
    }
    .request-wrapper.fade-out {
        opacity: 0;
        height: 0 !important;
        margin-bottom: 0;
        padding-top: 0;
        padding-bottom: 0;
        transform: scale(0.95);
        pointer-events: none; 
    }  
    .request-wrapper.fade-out * {
        
    }
    .accept-button:active img {
        transform: scale(0.9);
        transition: transform 0.3s ease;
    }
    </style>
}

